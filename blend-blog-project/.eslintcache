[{"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/App.tsx":"1","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Blog/BlogPost.tsx":"2","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/PrivateRoute.tsx":"3","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Blog/Header.tsx":"4","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/CreateBlogPost/CreateBlogPost.tsx":"5","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/CreateBlogPost/FormikNewPostForm.tsx":"6","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/ViewUserPosts.tsx":"7","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/actions/userActions.js":"8","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/reportWebVitals.js":"9","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Register/FormikRegisterForm.tsx":"10","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/reducers/blogpostReducer.ts":"11","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/reducers/initialState.ts":"12","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Blog/Footer.tsx":"13","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Blog/FeaturedPost.tsx":"14","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Register/Register.tsx":"15","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/EditBlogPost/FormikEditPostForm.tsx":"16","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/EditBlogPost/EditPostForm.tsx":"17","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Blog/Blog.tsx":"18","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/CreateBlogPost/NewPostForm.tsx":"19","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/actions/actionTypes.js":"20","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/index.tsx":"21","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Home.tsx":"22","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/reducers/userReducer.ts":"23","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Blog/MainFeaturedPost.tsx":"24","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/utils/axiosWithAuth.js":"25","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/LogIn/FormikLogInForm.tsx":"26","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/LogIn/LogIn.tsx":"27","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/actions/blogpostActions.js":"28"},{"size":1190,"mtime":1610393347485,"results":"29","hashOfConfig":"30"},{"size":3446,"mtime":1610408215137,"results":"31","hashOfConfig":"30"},{"size":905,"mtime":1610393347516,"results":"32","hashOfConfig":"30"},{"size":2143,"mtime":1610393347492,"results":"33","hashOfConfig":"30"},{"size":1100,"mtime":1610393347498,"results":"34","hashOfConfig":"30"},{"size":1690,"mtime":1610393347499,"results":"35","hashOfConfig":"30"},{"size":1641,"mtime":1610393347522,"results":"36","hashOfConfig":"30"},{"size":2883,"mtime":1610393347600,"results":"37","hashOfConfig":"30"},{"size":364,"mtime":1610317146337,"results":"38","hashOfConfig":"30"},{"size":2084,"mtime":1610393347517,"results":"39","hashOfConfig":"30"},{"size":3584,"mtime":1610472760248,"results":"40","hashOfConfig":"30"},{"size":866,"mtime":1610472773755,"results":"41","hashOfConfig":"30"},{"size":1304,"mtime":1610406683502,"results":"42","hashOfConfig":"30"},{"size":2614,"mtime":1610393347488,"results":"43","hashOfConfig":"30"},{"size":5285,"mtime":1610393347519,"results":"44","hashOfConfig":"30"},{"size":1848,"mtime":1610393347502,"results":"45","hashOfConfig":"30"},{"size":3373,"mtime":1610393347501,"results":"46","hashOfConfig":"30"},{"size":2534,"mtime":1610474089567,"results":"47","hashOfConfig":"30"},{"size":2752,"mtime":1610395409763,"results":"48","hashOfConfig":"30"},{"size":2106,"mtime":1610396562830,"results":"49","hashOfConfig":"30"},{"size":1088,"mtime":1610317146183,"results":"50","hashOfConfig":"30"},{"size":1203,"mtime":1610472843354,"results":"51","hashOfConfig":"30"},{"size":1903,"mtime":1610317146336,"results":"52","hashOfConfig":"30"},{"size":2088,"mtime":1610393347493,"results":"53","hashOfConfig":"30"},{"size":332,"mtime":1610317146431,"results":"54","hashOfConfig":"30"},{"size":1441,"mtime":1610317146175,"results":"55","hashOfConfig":"30"},{"size":4786,"mtime":1610317146177,"results":"56","hashOfConfig":"30"},{"size":4477,"mtime":1610473131962,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},"fmgsu8",{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/App.tsx",["132","133","134"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Home from \"./components/Home\";\nimport CreateBlogPost from \"./components/CreateBlogPost/CreateBlogPost\";\nimport ViewUserPosts from \"./components/ViewUserPosts\";\nimport FormikRegisterForm from \"./components/Register/FormikRegisterForm\";\nimport Header from './components/Blog/Header';\n\nimport BlogPost from \"./components/Blog/BlogPost\";\nimport FormikLogInForm from \"./components/LogIn/FormikLogInForm\";\nimport PrivateRoute from \"./components/PrivateRoute\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <br />\n        <Switch>\n          <Route exact path=\"/\" component={FormikRegisterForm} />\n          <Route exact path=\"/login\" component={FormikLogInForm} />\n          <PrivateRoute path=\"/home\" component={Home} />\n          <PrivateRoute path=\"/createblogpost\" component={CreateBlogPost} />\n          <PrivateRoute path=\"/myposts\" component={ViewUserPosts} />\n          <PrivateRoute path=\"/blog/:id\" component={BlogPost} />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Blog/BlogPost.tsx",["135","136","137"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Footer from \"./Footer\";\nimport MainFeaturedPost from \"./MainFeaturedPost\";\nimport Container from \"@material-ui/core/Container\";\nimport { getSingleBlogPost } from \"../../redux/actions/blogpostActions\";\nimport { getUser } from '../../redux/actions/userActions';\nimport FormikEditPostForm from '../EditBlogPost/FormikEditPostForm';\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { deleteBlogPost } from \"../../redux/actions/blogpostActions\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\n\n\ninterface SingleBlogPost {\n  blogpost_title: string;\n  blogpost_content: string;\n  user_id: number;\n  id: number;\n}\n\ninterface Author {\n  id: number;\n  name: string;\n}\n\nconst BlogPost = (props: any) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [editMode, setEditMode] = useState(false);\n\n  const url: string = window.location.pathname;\n  const postId: number = parseInt(url.substring(url.lastIndexOf(\"/\") + 1));\n  console.log(postId)\n  const userPost: SingleBlogPost = useSelector((state: any) => state.blogpostReducer.singleBlogPost);\n  //const user: Author = useSelector((state))\n  useEffect(() => {\n    console.log(postId)\n    dispatch(getSingleBlogPost(postId));\n    //dispatch(getUser(userPost.user_id));\n  }, []);\n\n  const post = {\n    title: userPost.blogpost_title,\n    description: \"\",\n    image:\n      \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTwZQ_Fc8p7OHV7r01bZeZrhfZlHRfnKL2O3Q&usqp=CAU\",\n    imgText: \"main image description\",\n    linkText: \"Continue reading…\",\n  };\n\n  //Function for edit mode - if it's in edit mode, render a form. If not, render the viewing\n  //component.\n  const handleDelete = () => {\n    //Going to use react-confirm-alert\n    confirmAlert({\n      title: \"Confirm to delete\",\n      message: `Are you sure you want to delete this post? There's no getting it back.`,\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => dispatch(deleteBlogPost(postId, history)),\n        },\n        {\n          label: \"No\",\n          onClick: () => null,\n        },\n      ],\n    });\n  };\n\n  const toggleEditMode = () => {\n    if (editMode) {\n      setEditMode(false)\n    } else {\n      setEditMode(true)\n    }\n  }\n\n  const selectActiveComponent = () => {\n    if (editMode) {\n      return (\n        <Container>\n        <FormikEditPostForm />\n        </Container>\n\n        \n      )\n    } else {\n      return (\n        <Container>\n        <h1>{userPost.blogpost_title}</h1>\n        <br />\n        {console.log(userPost)}\n        <p>{userPost.blogpost_content}</p>\n      </Container>\n      )\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <main>\n        <Header />\n        <MainFeaturedPost post={post} />\n        <br />\n        <EditIcon onClick={toggleEditMode}/>\n        <DeleteOutlineIcon onClick={handleDelete} />\n        {selectActiveComponent()}\n\n      </main>\n      <Footer\n        title=\"Footer\"\n        description=\"Something here to give the footer a purpose!\"\n      />\n    </React.Fragment>\n  );\n};\n\nexport default BlogPost;\n",["138","139"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/PrivateRoute.tsx",["140","141"],"import React, { useContext } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { RouteProps, Route, Redirect } from \"react-router-dom\";\nimport dotenv from \"dotenv\";\ndotenv.config();\n\ninterface PrivateRouteProps {\n  path: RouteProps[\"path\"];\n  component: React.ElementType;\n};\nconst PrivateRoute: React.FunctionComponent<PrivateRouteProps> = ({\n  component: Component,\n  ...routeProps\n}) => {\n  // Using this value for now to allow token to remain even if page refreshes/go to another link on site\n  const tokenPresent = window.localStorage.getItem(\"token\");\n  //const { token } = useContext(AppContext);\n  //const token = window.localStorage.getItem(\"token\");\n  console.log(tokenPresent);\n  return (\n    <Route\n      {...routeProps}\n      render={(props) =>\n        tokenPresent ? <Component props={props} /> : <Redirect to={\"/login\"} />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Blog/Header.tsx",["142","143","144","145","146","147"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/CreateBlogPost/CreateBlogPost.tsx",[],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/CreateBlogPost/FormikNewPostForm.tsx",["148","149","150"],"import NewPostForm from \"./NewPostForm\";\nimport { addBlogPost } from \"../../redux/actions/blogpostActions\";\nimport { withFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { connect } from \"react-redux\";\n//Implement loader if time allows\n//import Loader from 'react-loader-spinner';\nimport { Link as DOMLink, useHistory } from \"react-router-dom\";\n// PropTypes vs Typescript?\nimport PropTypes from \"prop-types\";\n\n// The type of props FormikUserForm receives\ninterface FormikUserFormProps {\n  initialTitle?: string;\n}\n// Shape of form values\ninterface NewPostFormValues {\n  title: string,\n  content: string\n}\n\nconst mapDispatchToProps = {\n  addBlogPost,\n  useHistory,\n};\nconst mapStateToProps = ((state: any) => ({user_id: state.userReducer.id}))\n\n\nconst FormikNewPostForm = withFormik<FormikUserFormProps, NewPostFormValues>({\n  mapPropsToValues: (props: any) => ({\n    user_id: props.user_id,\n    title: props.title,\n    content: props.content\n  }),\n  validationSchema: Yup.object().shape({\n    title: Yup.string().required(\"Title is required\"),\n    content: Yup.string().required(\"Content Required\"),\n  }),\n  handleSubmit(values: NewPostFormValues, { props }: any) {\n    let userId = window.localStorage.getItem(\"id\");\n    let postData: object = {\n      blogpost_title: values.title,\n      blogpost_content: values.content,\n      user_id: props.user_id,\n    };\n    console.log(props.history);\n    props.addBlogPost(postData, props.history);\n  },\n})(NewPostForm);\n\n// Connecting will allow FormikLogInForm to access loginUser dispatch function\nconst ConnectedNewPostForm = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FormikNewPostForm);\n\nexport default ConnectedNewPostForm;\n","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/ViewUserPosts.tsx",["151","152","153"],"import React, { useState, useEffect, useRef } from \"react\";\nimport Header from \"./Blog/Header\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Footer from \"./Blog/Footer\";\nimport MainFeaturedPost from \"./Blog/MainFeaturedPost\";\nimport Container from \"@material-ui/core/Container\";\nimport { useSelector } from \"react-redux\";\nimport FeaturedPost from \"./Blog/FeaturedPost\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst ViewUserPosts = (props: any) => {\n  const mainFeaturedPost = {\n    title: \"View Your Blog Posts\",\n    description: \"Here you can view all the blog posts you have created.\",\n    image:\n      \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTwZQ_Fc8p7OHV7r01bZeZrhfZlHRfnKL2O3Q&usqp=CAU\",\n    imgText: \"main image description\",\n  };\n\n  // May need to possible dispatch an action to get all user blogs...?\n  //Or just filter through all blogs in state, makes more sense.\n\n /* useEffect(() => {\n    dispatch()\n  })*/\n  //let id = window.localStorage.getItem(\"id\");\n  let userPosts = useSelector((state: any) => state.blogpostReducer.blogposts);\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"lg\">\n        <Header />\n        <MainFeaturedPost post={mainFeaturedPost} />\n        <Grid container spacing={4}>\n          {console.log(userPosts.id)}\n\n          {userPosts.map((post: any) => (\n            <FeaturedPost key={post.id} post={post} />\n          ))}\n        </Grid>\n      </Container>\n      <Footer\n        title=\"Footer\"\n        description=\"Something here to give the footer a purpose!\"\n      />\n    </React.Fragment>\n  );\n};\n\nexport default ViewUserPosts;\n","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/actions/userActions.js",[],["154","155"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/reportWebVitals.js",[],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Register/FormikRegisterForm.tsx",["156","157"],"import Register from \"./Register\";\nimport { registerUser } from \"../../redux/actions/userActions\";\nimport { withFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { connect } from \"react-redux\";\n//Implement loader if time allows\n//import Loader from 'react-loader-spinner';\nimport { Link as DOMLink, useHistory } from \"react-router-dom\";\n// PropTypes vs Typescript?\nimport PropTypes from \"prop-types\";\n\n// The type of props FormikUserForm receives\ninterface FormikUserFormProps {\n  initialEmail?: string;\n  message: string;\n}\n// Shape of form values\ninterface FormValues {\n  name: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\nconst mapDispatchToProps = {\n  registerUser,\n  useHistory,\n};\nconst regexStrongPassword = new RegExp(\n  \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\"\n);\n\nconst FormikRegisterForm = withFormik<FormikUserFormProps, FormValues>({\n  mapPropsToValues: (props) => ({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  }),\n  validationSchema: Yup.object().shape({\n    name: Yup.string().required(\"Name is required\"),\n    email: Yup.string().required(\"Email is required\").email(\"Invalid Email\"),\n    password: Yup.string()\n      .required(\"Password Required\")\n      .matches(regexStrongPassword)\n      .typeError(\n        \"Must be a min of 8 character and contain at least 1 uppercase character, 1 numeric character, 1 special character, \"\n      ),\n    confirmPassword: Yup.string()\n      .required(\"Please confirm your password\")\n      .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\"),\n  }),\n  handleSubmit(values: FormValues, { props }: any) {\n    let postData: object = {\n      name: values.name,\n      email: values.email,\n      password: values.password,\n    };\n    //console.log(props.history);\n    props.registerUser(postData, props.history);\n  },\n})(Register);\n\n// Connecting will allow FormikLogInForm to access loginUser dispatch function\nconst ConnectedRegisterForm = connect(\n  null,\n  mapDispatchToProps\n)(FormikRegisterForm);\n\nexport default ConnectedRegisterForm;\n","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/reducers/blogpostReducer.ts",[],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/reducers/initialState.ts",[],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Blog/Footer.tsx",["158","159"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\n\nconst Copyright = () => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Humaira's Blog\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    // marginTop: theme.spacing(8),\n    padding: theme.spacing(6, 0),\n  },\n}));\n\nexport default function Footer(props: any) {\n  const classes = useStyles();\n  const { description, title } = props;\n\n  return (\n    <footer className={classes.footer}>\n      <Container maxWidth=\"lg\">\n\n        <Typography\n          variant=\"subtitle1\"\n          align=\"center\"\n          color=\"textSecondary\"\n          component=\"p\"\n        >\n          {/*description*/}\n        </Typography>\n        <Copyright />\n      </Container>\n    </footer>\n  );\n}\n\nFooter.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string,\n};\n",["160","161"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Blog/FeaturedPost.tsx",["162","163","164","165","166","167","168","169"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteBlogPost, getSingleBlogPost } from \"../../redux/actions/blogpostActions\";\nimport { findAllByDisplayValue } from \"@testing-library/react\";\nconst cardImage = \"https://source.unsplash.com/random\";\n\nconst useStyles = makeStyles({\n  card: {\n    display: \"flex\",\n  },\n  cardDetails: {\n    flex: 1,\n  },\n  cardMedia: {\n    width: 160,\n  },\n});\n\nconst FeaturedPost = (props: any) => {\n  const classes = useStyles();\n  const { post } = props;\n\n  const state = {\n    pathname: `/blog/${post.id}`,\n    blogpost: post,\n    editMode: false\n  };\n\n\n  return (\n    <Grid item xs={12} md={6}>\n      <Link to={state} style={{ textDecoration: \"none\" }}>\n        <CardActionArea component=\"a\">\n          <Card className={classes.card}>\n            <div className={classes.cardDetails}>\n              <CardContent>\n                <Typography component=\"h2\" variant=\"h5\">\n                  {post.blogpost_title}\n                </Typography>\n                <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                  {post.date}\n                </Typography>\n                <Typography variant=\"subtitle1\" paragraph>\n                  {post.blogpost_content}\n                </Typography>\n                <Typography variant=\"subtitle1\" color=\"primary\">\n                  Continue reading...\n                </Typography>\n              </CardContent>\n            </div>\n            <Hidden xsDown>\n              <CardMedia\n                className={classes.cardMedia}\n                image={cardImage}\n                title={post.imageTitle}\n              />\n            </Hidden>\n          </Card>\n        </CardActionArea>\n      </Link>\n    </Grid>\n  );\n};\n\nFeaturedPost.propTypes = {\n  post: PropTypes.object,\n};\n\nexport default FeaturedPost;\n",["170","171"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Register/Register.tsx",["172"],"import React from \"react\";\n\nimport { Form, FormikProps } from \"formik\";\nimport axios from \"axios\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.mode === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\n\n// Shape of form values\ninterface FormValues {\n  name: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nconst Register = (props: FormikProps<FormValues>) => {\n  const classes = useStyles();\n\n  const {\n    errors,\n    touched,\n    isSubmitting,\n    getFieldHelpers,\n    getFieldProps,\n    ...rest\n  } = props;\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          {/* FORM STARTS HERE */}\n          <Form className={classes.form}>\n            {/* Name Text Field */}\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"name\"\n              label=\"Name\"\n              onChange={props.handleChange}\n              value={props.values.name}\n              autoComplete=\"name\"\n              autoFocus\n              error={Boolean(errors.name && touched.name)}\n            />\n            {/* Email Text Field  */}\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              onChange={props.handleChange}\n              value={props.values.email}\n              autoComplete=\"email\"\n              autoFocus\n              error={Boolean(errors.email)}\n            />\n            {/* Password Text Field */}\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              error={Boolean(errors.password && touched.password)}\n              name=\"password\"\n              value={props.values.password}\n              onChange={props.handleChange}\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            {errors.password ? <div>{errors.password}</div> : null}\n\n            {/* Confirm Password Text Field */}\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              error={Boolean(errors.password && touched.password)}\n              name=\"confirmPassword\"\n              value={props.values.confirmPassword}\n              onChange={props.handleChange}\n              label=\"ConfirmPassword\"\n              type=\"password\"\n              id=\"confirmPassword\"\n              autoComplete=\"current-password\"\n            />\n            {touched.password && errors.password ? (\n              <div>{errors.confirmPassword}</div>\n            ) : null}\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              className={classes.submit}\n            >\n              Sign Up\n            </Button>\n            <Grid container>\n              <Grid item>\n                <Link href=\"/login\" variant=\"body2\">\n                  {\"Already have an account? LogIn\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Box sx={{ mt: 5 }}>\n              <Copyright />\n            </Box>\n          </Form>\n          {/* FORM ENDS HERE */}\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Register;\n","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/EditBlogPost/FormikEditPostForm.tsx",["173","174","175"],"import EditPostForm from \"./EditPostForm\";\nimport { editBlogPost } from \"../../redux/actions/blogpostActions\";\nimport { withFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { connect } from \"react-redux\";\n//Implement loader if time allows\n//import Loader from 'react-loader-spinner';\nimport { useHistory } from \"react-router-dom\";\n// PropTypes vs Typescript?\nimport PropTypes from \"prop-types\";\n\n// The type of props FormikUserForm receives\ninterface FormikUserFormProps {\n  title?: string;\n  content?: string;\n  blogpost?: any;\n}\n// Shape of form values\ninterface NewPostFormValues {\n  title: string;\n  content: string;\n  id: number;\n}\n\nconst mapDispatchToProps = {\n  editBlogPost,\n  useHistory,\n};\n\nconst mapStateToProps = ((state: any) => ({currentPost: state.blogpostReducer.singleBlogPost}))\n\nconst FormikEditPostForm = withFormik({\n  mapPropsToValues: (props: any) => ({\n    title: props.currentPost.blogpost_title,\n    content: props.currentPost.blogpost_content,\n    id: props.currentPost.id\n  }),\n  enableReinitialize: true,\n  validationSchema: Yup.object().shape({\n    title: Yup.string().required(\"Title is required\"),\n    content: Yup.string().required(\"Content Required\"),\n  }),\n  handleSubmit(values: NewPostFormValues, { props }: any) {\n    console.log(props)\n    let userId = window.localStorage.getItem(\"id\");\n    console.log(props)\n    let postData: object = {\n      blogpost_title: values.title,\n      blogpost_content: values.content,\n      id: values.id\n    };\n    console.log(props.editBlogPost);\n    console.log(props);\n\n    props.editBlogPost(postData, props.history) ;\n  },\n})(EditPostForm);\n\n// Connecting will allow FormikLogInForm to access loginUser dispatch function\nconst ConnectedEditPostForm = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FormikEditPostForm);\n\nexport default ConnectedEditPostForm;\n","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/EditBlogPost/EditPostForm.tsx",["176","177","178","179","180"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Form, FormikProps } from \"formik\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.mode === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    width: \"25%\",\n  },\n}));\n\n// Shape of form values\ninterface FormValues {\n  title: string;\n  content: string;\n}\ninterface SingleBlogPost {\n  blogpost_title: string;\n  blogpost_content: string;\n  user_id: number;\n  id: number;\n}\n\nexport default function EditPostForm(props: FormikProps<FormValues>) {\n  const classes = useStyles();\n  const currentPost = useSelector((state: any) => state.blogpostReducer.singleBlogPost);\n  //console.log(currentPost)\n  const {\n    errors,\n    touched,\n    isSubmitting,\n    getFieldHelpers,\n    getFieldProps,\n    setFieldValue,\n    setFieldTouched,\n    ...rest\n  } = props;\n  useEffect(() => {\n    getFieldProps(\"title\").value=currentPost.blogpost_title\n    setFieldValue(\"title\", currentPost.blogpost_title)\n  },[])\n  //console.log(props)\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Edit Post\n      </Typography>\n      {/* FORM STARTS HERE */}\n      <Form className={classes.form}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={6}></Grid>\n          <Grid item xs={12}>\n            <TextField\n              required\n              id=\"title\"\n              name=\"title\"\n              key=\"title\"\n              label=\"title\"\n              value={props.values.title}\n              onChange={props.handleChange}\n              style={{ width: \"50%\" }}\n              autoComplete=\"Blog Title\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              required\n              id=\"content\"\n              name=\"content\"\n              label=\"content\"\n              value={props.values.content}\n              onChange={props.handleChange}\n              multiline\n              variant=\"filled\"\n              fullWidth\n              style={{ width: \"50%\" }}\n              autoComplete=\"Write post here...\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                className={classes.submit}\n              >\n                Submit Post\n              </Button>\n          </Grid>\n        </Grid>\n      </Form>\n    </React.Fragment>\n  );\n}\n","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Blog/Blog.tsx",["181"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/CreateBlogPost/NewPostForm.tsx",["182","183","184","185"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/actions/actionTypes.js",[],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/index.tsx",[],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Home.tsx",["186","187","188","189","190"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/reducers/userReducer.ts",[],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Blog/MainFeaturedPost.tsx",["191"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainFeaturedPost: {\n    position: \"relative\",\n    backgroundColor: theme.palette.grey[800],\n    color: theme.palette.common.white,\n    marginBottom: theme.spacing(4),\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"center\",\n  },\n  overlay: {\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    backgroundColor: \"rgba(0,0,0,.3)\",\n  },\n  mainFeaturedPostContent: {\n    position: \"relative\",\n    padding: theme.spacing(3),\n    [theme.breakpoints.up(\"md\")]: {\n      padding: theme.spacing(6),\n      paddingRight: 0,\n    },\n  },\n}));\n\nconst MainFeaturedPost = (props: any) => {\n  const classes = useStyles();\n  const { post } = props;\n\n  return (\n    <Paper\n      className={classes.mainFeaturedPost}\n      style={{ backgroundImage: `url(${post.image})` }}\n    >\n      {/* Increase the priority of the hero background image */}\n      {\n        <img\n          style={{ display: \"none\" }}\n          src={post.image}\n          alt={post.imageText}\n        />\n      }\n      <div className={classes.overlay} />\n      <Grid container>\n        <Grid item md={6}>\n          <div className={classes.mainFeaturedPostContent}>\n            <Typography\n              component=\"h1\"\n              variant=\"h3\"\n              color=\"inherit\"\n              gutterBottom\n            >\n              {post.title}\n            </Typography>\n            <Typography variant=\"h5\" color=\"inherit\" paragraph>\n              {post.description}\n            </Typography>\n          </div>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nMainFeaturedPost.propTypes = {\n  post: PropTypes.object,\n};\n\nexport default MainFeaturedPost;\n","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/utils/axiosWithAuth.js",[],["192","193"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/LogIn/FormikLogInForm.tsx",["194","195"],"import LogIn from \"./LogIn\";\nimport { loginUser } from \"../../redux/actions/userActions\";\nimport { withFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { connect } from \"react-redux\";\n//Implement loader if time allows\n//import Loader from 'react-loader-spinner';\nimport { Link as DOMLink, useHistory } from \"react-router-dom\";\n// PropTypes vs Typescript?\nimport PropTypes from \"prop-types\";\n\n// The type of props FormikUserForm receives\ninterface FormikUserFormProps {\n  initialEmail?: string;\n  message: string;\n}\n// Shape of form values\ninterface FormValues {\n  email: string;\n  password: string;\n}\n\nconst mapDispatchToProps = {\n  loginUser,\n  useHistory,\n};\n\nconst FormikLogInForm = withFormik<FormikUserFormProps, FormValues>({\n  mapPropsToValues: (props) => ({\n    email: props.initialEmail || \"\",\n    password: \"\",\n  }),\n  validationSchema: Yup.object().shape({\n    email: Yup.string().required(\"Email is required\").email(\"Invalid Email\"),\n    password: Yup.string().required(\"Password Required\"),\n  }),\n  handleSubmit(values: FormValues, { props }: any) {\n    let postData: object = { email: values.email, password: values.password };\n    console.log(props.history);\n    props.loginUser(postData, props.history);\n  },\n})(LogIn);\n\n// Connecting will allow FormikLogInForm to access loginUser dispatch function\nconst ConnectedLogInForm = connect(null, mapDispatchToProps)(FormikLogInForm);\n\nexport default ConnectedLogInForm;\n","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/LogIn/LogIn.tsx",["196","197","198","199","200","201","202"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/actions/blogpostActions.js",["203"],{"ruleId":"204","severity":1,"message":"205","line":1,"column":17,"nodeType":"206","messageId":"207","endLine":1,"endColumn":25},{"ruleId":"204","severity":1,"message":"208","line":1,"column":27,"nodeType":"206","messageId":"207","endLine":1,"endColumn":36},{"ruleId":"204","severity":1,"message":"209","line":7,"column":8,"nodeType":"206","messageId":"207","endLine":7,"endColumn":14},{"ruleId":"204","severity":1,"message":"210","line":10,"column":10,"nodeType":"206","messageId":"207","endLine":10,"endColumn":17},{"ruleId":"204","severity":1,"message":"211","line":26,"column":11,"nodeType":"206","messageId":"207","endLine":26,"endColumn":17},{"ruleId":"212","severity":1,"message":"213","line":45,"column":6,"nodeType":"214","endLine":45,"endColumn":8,"suggestions":"215"},{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"204","severity":1,"message":"220","line":1,"column":17,"nodeType":"206","messageId":"207","endLine":1,"endColumn":27},{"ruleId":"204","severity":1,"message":"221","line":2,"column":10,"nodeType":"206","messageId":"207","endLine":2,"endColumn":21},{"ruleId":"204","severity":1,"message":"221","line":5,"column":10,"nodeType":"206","messageId":"207","endLine":5,"endColumn":21},{"ruleId":"204","severity":1,"message":"222","line":5,"column":36,"nodeType":"206","messageId":"207","endLine":5,"endColumn":43},{"ruleId":"204","severity":1,"message":"223","line":11,"column":8,"nodeType":"206","messageId":"207","endLine":11,"endColumn":18},{"ruleId":"204","severity":1,"message":"224","line":12,"column":8,"nodeType":"206","messageId":"207","endLine":12,"endColumn":12},{"ruleId":"204","severity":1,"message":"225","line":13,"column":8,"nodeType":"206","messageId":"207","endLine":13,"endColumn":18},{"ruleId":"204","severity":1,"message":"226","line":35,"column":11,"nodeType":"206","messageId":"207","endLine":35,"endColumn":19},{"ruleId":"204","severity":1,"message":"227","line":8,"column":18,"nodeType":"206","messageId":"207","endLine":8,"endColumn":25},{"ruleId":"204","severity":1,"message":"228","line":10,"column":8,"nodeType":"206","messageId":"207","endLine":10,"endColumn":17},{"ruleId":"204","severity":1,"message":"229","line":40,"column":9,"nodeType":"206","messageId":"207","endLine":40,"endColumn":15},{"ruleId":"204","severity":1,"message":"205","line":1,"column":17,"nodeType":"206","messageId":"207","endLine":1,"endColumn":25},{"ruleId":"204","severity":1,"message":"208","line":1,"column":27,"nodeType":"206","messageId":"207","endLine":1,"endColumn":36},{"ruleId":"204","severity":1,"message":"230","line":1,"column":38,"nodeType":"206","messageId":"207","endLine":1,"endColumn":44},{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"204","severity":1,"message":"227","line":8,"column":18,"nodeType":"206","messageId":"207","endLine":8,"endColumn":25},{"ruleId":"204","severity":1,"message":"228","line":10,"column":8,"nodeType":"206","messageId":"207","endLine":10,"endColumn":17},{"ruleId":"204","severity":1,"message":"231","line":31,"column":11,"nodeType":"206","messageId":"207","endLine":31,"endColumn":22},{"ruleId":"204","severity":1,"message":"232","line":31,"column":24,"nodeType":"206","messageId":"207","endLine":31,"endColumn":29},{"ruleId":"216","replacedBy":"233"},{"ruleId":"218","replacedBy":"234"},{"ruleId":"204","severity":1,"message":"235","line":4,"column":10,"nodeType":"206","messageId":"207","endLine":4,"endColumn":20},{"ruleId":"204","severity":1,"message":"236","line":7,"column":10,"nodeType":"206","messageId":"207","endLine":7,"endColumn":22},{"ruleId":"204","severity":1,"message":"237","line":15,"column":8,"nodeType":"206","messageId":"207","endLine":15,"endColumn":25},{"ruleId":"204","severity":1,"message":"238","line":16,"column":8,"nodeType":"206","messageId":"207","endLine":16,"endColumn":16},{"ruleId":"204","severity":1,"message":"239","line":17,"column":10,"nodeType":"206","messageId":"207","endLine":17,"endColumn":21},{"ruleId":"204","severity":1,"message":"240","line":18,"column":10,"nodeType":"206","messageId":"207","endLine":18,"endColumn":24},{"ruleId":"204","severity":1,"message":"241","line":18,"column":26,"nodeType":"206","messageId":"207","endLine":18,"endColumn":43},{"ruleId":"204","severity":1,"message":"242","line":19,"column":10,"nodeType":"206","messageId":"207","endLine":19,"endColumn":31},{"ruleId":"216","replacedBy":"243"},{"ruleId":"218","replacedBy":"244"},{"ruleId":"204","severity":1,"message":"245","line":82,"column":8,"nodeType":"206","messageId":"207","endLine":82,"endColumn":12},{"ruleId":"204","severity":1,"message":"228","line":10,"column":8,"nodeType":"206","messageId":"207","endLine":10,"endColumn":17},{"ruleId":"204","severity":1,"message":"246","line":13,"column":11,"nodeType":"206","messageId":"207","endLine":13,"endColumn":30},{"ruleId":"204","severity":1,"message":"229","line":45,"column":9,"nodeType":"206","messageId":"207","endLine":45,"endColumn":15},{"ruleId":"204","severity":1,"message":"205","line":1,"column":28,"nodeType":"206","messageId":"207","endLine":1,"endColumn":36},{"ruleId":"204","severity":1,"message":"247","line":9,"column":10,"nodeType":"206","messageId":"207","endLine":9,"endColumn":14},{"ruleId":"204","severity":1,"message":"248","line":50,"column":11,"nodeType":"206","messageId":"207","endLine":50,"endColumn":25},{"ruleId":"204","severity":1,"message":"245","line":69,"column":8,"nodeType":"206","messageId":"207","endLine":69,"endColumn":12},{"ruleId":"212","severity":1,"message":"249","line":74,"column":5,"nodeType":"214","endLine":74,"endColumn":7,"suggestions":"250"},{"ruleId":"204","severity":1,"message":"251","line":33,"column":9,"nodeType":"206","messageId":"207","endLine":33,"endColumn":16},{"ruleId":"204","severity":1,"message":"208","line":1,"column":17,"nodeType":"206","messageId":"207","endLine":1,"endColumn":26},{"ruleId":"204","severity":1,"message":"205","line":1,"column":28,"nodeType":"206","messageId":"207","endLine":1,"endColumn":36},{"ruleId":"204","severity":1,"message":"247","line":8,"column":10,"nodeType":"206","messageId":"207","endLine":8,"endColumn":14},{"ruleId":"204","severity":1,"message":"245","line":58,"column":8,"nodeType":"206","messageId":"207","endLine":58,"endColumn":12},{"ruleId":"204","severity":1,"message":"228","line":5,"column":8,"nodeType":"206","messageId":"207","endLine":5,"endColumn":17},{"ruleId":"204","severity":1,"message":"252","line":7,"column":3,"nodeType":"206","messageId":"207","endLine":7,"endColumn":18},{"ruleId":"204","severity":1,"message":"210","line":11,"column":10,"nodeType":"206","messageId":"207","endLine":11,"endColumn":17},{"ruleId":"212","severity":1,"message":"253","line":29,"column":6,"nodeType":"214","endLine":29,"endColumn":16,"suggestions":"254"},{"ruleId":"204","severity":1,"message":"255","line":31,"column":9,"nodeType":"206","messageId":"207","endLine":31,"endColumn":17},{"ruleId":"204","severity":1,"message":"247","line":7,"column":8,"nodeType":"206","messageId":"207","endLine":7,"endColumn":12},{"ruleId":"216","replacedBy":"243"},{"ruleId":"218","replacedBy":"244"},{"ruleId":"204","severity":1,"message":"227","line":8,"column":18,"nodeType":"206","messageId":"207","endLine":8,"endColumn":25},{"ruleId":"204","severity":1,"message":"228","line":10,"column":8,"nodeType":"206","messageId":"207","endLine":10,"endColumn":17},{"ruleId":"204","severity":1,"message":"205","line":1,"column":17,"nodeType":"206","messageId":"207","endLine":1,"endColumn":25},{"ruleId":"204","severity":1,"message":"227","line":4,"column":18,"nodeType":"206","messageId":"207","endLine":4,"endColumn":25},{"ruleId":"204","severity":1,"message":"235","line":4,"column":27,"nodeType":"206","messageId":"207","endLine":4,"endColumn":37},{"ruleId":"204","severity":1,"message":"228","line":5,"column":8,"nodeType":"206","messageId":"207","endLine":5,"endColumn":17},{"ruleId":"204","severity":1,"message":"256","line":12,"column":8,"nodeType":"206","messageId":"207","endLine":12,"endColumn":24},{"ruleId":"204","severity":1,"message":"257","line":13,"column":8,"nodeType":"206","messageId":"207","endLine":13,"endColumn":16},{"ruleId":"204","severity":1,"message":"245","line":84,"column":8,"nodeType":"206","messageId":"207","endLine":84,"endColumn":12},{"ruleId":"258","severity":1,"message":"235","line":3,"column":10,"nodeType":"206","messageId":"207","endLine":3,"endColumn":20},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Header' is defined but never used.","'getUser' is defined but never used.","'Author' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'postId'. Either include them or remove the dependency array.","ArrayExpression",["259"],"no-native-reassign",["260"],"no-negated-in-lhs",["261"],"'useContext' is defined but never used.","'useSelector' is defined but never used.","'connect' is defined but never used.","'IconButton' is defined but never used.","'Icon' is defined but never used.","'SearchIcon' is defined but never used.","'sections' is assigned a value but never used.","'DOMLink' is defined but never used.","'PropTypes' is defined but never used.","'userId' is assigned a value but never used.","'useRef' is defined but never used.","'description' is assigned a value but never used.","'title' is assigned a value but never used.",["260"],["261"],"'useHistory' is defined but never used.","'confirmAlert' is defined but never used.","'DeleteOutlineIcon' is defined but never used.","'EditIcon' is defined but never used.","'useDispatch' is defined but never used.","'deleteBlogPost' is defined but never used.","'getSingleBlogPost' is defined but never used.","'findAllByDisplayValue' is defined but never used.",["260"],["261"],"'rest' is assigned a value but never used.","'FormikUserFormProps' is defined but never used.","'Link' is defined but never used.","'SingleBlogPost' is defined but never used.","React Hook useEffect has missing dependencies: 'currentPost.blogpost_title', 'getFieldProps', and 'setFieldValue'. Either include them or remove the dependency array.",["262"],"'classes' is assigned a value but never used.","'getAllBlogPosts' is defined but never used.","React Hook React.useEffect has missing dependencies: 'history' and 'string_id'. Either include them or remove the dependency array.",["263"],"'allBlogs' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","no-unused-vars",{"desc":"264","fix":"265"},"no-global-assign","no-unsafe-negation",{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},"Update the dependencies array to be: [dispatch, postId]",{"range":"270","text":"271"},"Update the dependencies array to be: [currentPost.blogpost_title, getFieldProps, setFieldValue]",{"range":"272","text":"273"},"Update the dependencies array to be: [dispatch, history, string_id]",{"range":"274","text":"275"},[1648,1650],"[dispatch, postId]",[1922,1924],"[currentPost.blogpost_title, getFieldProps, setFieldValue]",[855,865],"[dispatch, history, string_id]"]