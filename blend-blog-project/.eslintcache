[{"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/App.tsx":"1","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/actions/blogpostActions.js":"2","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/reducers/blogpostReducer.ts":"3","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/ViewUserPosts.tsx":"4","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Blog/Footer.tsx":"5","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/PrivateRoute.tsx":"6","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/actions/userActions.js":"7","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/reducers/initialState.ts":"8","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Home.tsx":"9","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/EditBlogPost/FormikEditPostForm.tsx":"10","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Blog/Header.tsx":"11","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/utils/axiosWithAuth.js":"12","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Favorites.tsx":"13","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/actions/actionTypes.js":"14","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/CreateBlogPost/NewPostForm.tsx":"15","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/EditBlogPost/EditPostForm.tsx":"16","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Blog/Blog.tsx":"17","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/reducers/userReducer.ts":"18","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/CreateBlogPost/CreateBlogPost.tsx":"19","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Blog/SingleBlogPost.tsx":"20","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Blog/BlogCard.tsx":"21","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Register/FormikRegisterForm.tsx":"22","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/reportWebVitals.js":"23","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/CreateBlogPost/FormikNewPostForm.tsx":"24","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/reducers/index.js":"25","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Register/Register.tsx":"26"},{"size":1323,"mtime":1610527906611,"results":"27","hashOfConfig":"28"},{"size":6779,"mtime":1610527906767,"results":"29","hashOfConfig":"28"},{"size":4793,"mtime":1610496624229,"results":"30","hashOfConfig":"28"},{"size":1613,"mtime":1610527906634,"results":"31","hashOfConfig":"28"},{"size":1303,"mtime":1610527906613,"results":"32","hashOfConfig":"28"},{"size":905,"mtime":1610475299632,"results":"33","hashOfConfig":"28"},{"size":3101,"mtime":1610527906864,"results":"34","hashOfConfig":"28"},{"size":1053,"mtime":1610495461450,"results":"35","hashOfConfig":"28"},{"size":1183,"mtime":1610527906629,"results":"36","hashOfConfig":"28"},{"size":1855,"mtime":1610527906627,"results":"37","hashOfConfig":"28"},{"size":2023,"mtime":1610527906614,"results":"38","hashOfConfig":"28"},{"size":332,"mtime":1610317146431,"results":"39","hashOfConfig":"28"},{"size":1552,"mtime":1610527906628,"results":"40","hashOfConfig":"28"},{"size":2651,"mtime":1610480459883,"results":"41","hashOfConfig":"28"},{"size":2900,"mtime":1610527906620,"results":"42","hashOfConfig":"28"},{"size":3431,"mtime":1610527906624,"results":"43","hashOfConfig":"28"},{"size":2500,"mtime":1610528983922,"results":"44","hashOfConfig":"28"},{"size":2068,"mtime":1610527907026,"results":"45","hashOfConfig":"28"},{"size":1197,"mtime":1610529680789,"results":"46","hashOfConfig":"28"},{"size":3750,"mtime":1610533119405,"results":"47","hashOfConfig":"28"},{"size":3384,"mtime":1610533576274,"results":"48","hashOfConfig":"28"},{"size":2084,"mtime":1610532376277,"results":"49","hashOfConfig":"28"},{"size":364,"mtime":1610317146337,"results":"50","hashOfConfig":"28"},{"size":1692,"mtime":1610527906619,"results":"51","hashOfConfig":"28"},{"size":332,"mtime":1610317146293,"results":"52","hashOfConfig":"28"},{"size":5285,"mtime":1610475299634,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},"fmgsu8",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"65"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/App.tsx",["116","117","118"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Home from \"./components/Home\";\nimport CreateBlogPost from \"./components/CreateBlogPost/CreateBlogPost\";\nimport ViewUserPosts from \"./components/ViewUserPosts\";\nimport Favorites from \"./components/Favorites\";\nimport FormikRegisterForm from \"./components/Register/FormikRegisterForm\";\nimport Header from \"./components/Blog/Header\";\n\nimport SingleBlogPost from \"./components/Blog/SingleBlogPost\";\nimport FormikLogInForm from \"./components/LogIn/FormikLogInForm\";\nimport PrivateRoute from \"./components/PrivateRoute\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <br />\n        <Switch>\n          <Route exact path=\"/\" component={FormikRegisterForm} />\n          <Route exact path=\"/login\" component={FormikLogInForm} />\n          <PrivateRoute path=\"/home\" component={Home} />\n          <PrivateRoute path=\"/createblogpost\" component={CreateBlogPost} />\n          <PrivateRoute path=\"/myposts\" component={ViewUserPosts} />\n          <PrivateRoute path=\"/favorites\" component={Favorites} />\n          <PrivateRoute path=\"/blog/:id\" component={SingleBlogPost} />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n",["119","120"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/actions/blogpostActions.js",[],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/reducers/blogpostReducer.ts",[],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/ViewUserPosts.tsx",["121","122","123"],"import React, { useState, useEffect, useRef } from \"react\";\nimport Header from \"./Blog/Header\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Footer from \"./Blog/Footer\";\nimport HeroBanner from \"./Blog/HeroBanner\";\nimport Container from \"@material-ui/core/Container\";\nimport { useSelector } from \"react-redux\";\nimport BlogCard from \"./Blog/BlogCard\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst ViewUserPosts = () => {\n  const viewUserPostsHeroBanner = {\n    title: \"View Your Blog Posts\",\n    description: \"Here you can view all the blog posts you have created.\",\n    image:\n      \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTwZQ_Fc8p7OHV7r01bZeZrhfZlHRfnKL2O3Q&usqp=CAU\",\n    imgText: \"main image description\",\n  };\n\n  // May need to possible dispatch an action to get all user blogs...?\n  //Or just filter through all blogs in state, makes more sense.\n\n  /* useEffect(() => {\n    dispatch()\n  })*/\n  //let id = window.localStorage.getItem(\"id\");\n  let userPosts = useSelector((state: any) => state.blogpostReducer.blogposts);\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"lg\">\n        <Header />\n        <HeroBanner post={viewUserPostsHeroBanner} />\n        <Grid container spacing={4}>\n          {console.log(userPosts)}\n\n          {userPosts.map((post: any) => (\n            <BlogCard key={post.id} post={post} />\n          ))}\n        </Grid>\n      </Container>\n      <Footer\n        title=\"Footer\"\n        description=\"Something here to give the footer a purpose!\"\n      />\n    </React.Fragment>\n  );\n};\n\nexport default ViewUserPosts;\n",["124","125"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Blog/Footer.tsx",["126","127"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/PrivateRoute.tsx",["128","129"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/actions/userActions.js",[],["130","131"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/reducers/initialState.ts",[],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Home.tsx",["132","133","134","135"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/EditBlogPost/FormikEditPostForm.tsx",["136","137","138"],"import EditPostForm from \"./EditPostForm\";\nimport { editBlogPost } from \"../../redux/actions/blogpostActions\";\nimport { withFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { connect } from \"react-redux\";\n//Implement loader if time allows\n//import Loader from 'react-loader-spinner';\nimport { useHistory } from \"react-router-dom\";\n// PropTypes vs Typescript?\nimport PropTypes from \"prop-types\";\n\n// The type of props FormikUserForm receives\ninterface FormikUserFormProps {\n  title?: string;\n  content?: string;\n  blogpost?: any;\n}\n// Shape of form values\ninterface NewPostFormValues {\n  title: string;\n  content: string;\n  id: number;\n}\n\nconst mapDispatchToProps = {\n  editBlogPost,\n  useHistory,\n};\n\nconst mapStateToProps = (state: any) => ({\n  currentPost: state.blogpostReducer.singleBlogPost,\n});\n\nconst FormikEditPostForm = withFormik({\n  mapPropsToValues: (props: any) => ({\n    title: props.currentPost.blogpost_title,\n    content: props.currentPost.blogpost_content,\n    id: props.currentPost.id,\n  }),\n  enableReinitialize: true,\n  validationSchema: Yup.object().shape({\n    title: Yup.string().required(\"Title is required\"),\n    content: Yup.string().required(\"Content Required\"),\n  }),\n  handleSubmit(values: NewPostFormValues, { props }: any) {\n    console.log(props);\n    let userId = window.localStorage.getItem(\"id\");\n    console.log(props);\n    let postData: object = {\n      blogpost_title: values.title,\n      blogpost_content: values.content,\n      id: values.id,\n    };\n    console.log(props.editBlogPost);\n    console.log(props);\n\n    props.editBlogPost(postData, props.history);\n  },\n})(EditPostForm);\n\n// Connecting will allow FormikLogInForm to access loginUser dispatch function\nconst ConnectedEditPostForm = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FormikEditPostForm);\n\nexport default ConnectedEditPostForm;\n",["139","140"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Blog/Header.tsx",["141","142","143"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/utils/axiosWithAuth.js",[],["144","145"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Favorites.tsx",["146"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/actions/actionTypes.js",[],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/CreateBlogPost/NewPostForm.tsx",["147","148","149","150"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/EditBlogPost/EditPostForm.tsx",["151","152","153","154","155","156"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Form, FormikProps } from \"formik\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.mode === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    width: \"25%\",\n  },\n}));\n\n// Shape of form values\ninterface FormValues {\n  title: string;\n  content: string;\n}\ninterface SingleBlogPost {\n  blogpost_title: string;\n  blogpost_content: string;\n  user_id: number;\n  id: number;\n}\n\nexport default function EditPostForm(props: FormikProps<FormValues>) {\n  const classes = useStyles();\n  let history = useHistory();\n  const currentPost = useSelector(\n    (state: any) => state.blogpostReducer.singleBlogPost\n  );\n  //console.log(currentPost)\n  const {\n    errors,\n    touched,\n    isSubmitting,\n    getFieldHelpers,\n    getFieldProps,\n    setFieldValue,\n    setFieldTouched,\n    handleSubmit,\n    ...rest\n  } = props;\n  useEffect(() => {\n    getFieldProps(\"title\").value = currentPost.blogpost_title;\n    setFieldValue(\"title\", currentPost.blogpost_title);\n  }, []);\n  //console.log(props)\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Edit Post\n      </Typography>\n      {/* FORM STARTS HERE */}\n      <Form className={classes.form}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={6}></Grid>\n          <Grid item xs={12}>\n            <TextField\n              required\n              id=\"title\"\n              name=\"title\"\n              key=\"title\"\n              label=\"title\"\n              value={props.values.title}\n              onChange={props.handleChange}\n              style={{ width: \"50%\" }}\n              autoComplete=\"Blog Title\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              required\n              id=\"content\"\n              name=\"content\"\n              label=\"content\"\n              value={props.values.content}\n              onChange={props.handleChange}\n              multiline\n              variant=\"filled\"\n              fullWidth\n              style={{ width: \"50%\" }}\n              autoComplete=\"Write post here...\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              className={classes.submit}\n            >\n              Submit Post\n            </Button>\n          </Grid>\n        </Grid>\n      </Form>\n    </React.Fragment>\n  );\n}\n","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Blog/Blog.tsx",[],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/reducers/userReducer.ts",["157"],"/* eslint-disable import/prefer-default-export */\nimport { UserInitialState } from \"./initialState\";\nimport * as ActionTypes from \"../actions/actionTypes\";\nimport { ACTIONTYPE } from \"./ACTIONTYPES\";\n\n// Need to replace 'any' type with correct type\n// 'payload' definition needs to be described in ACTIONTYPES.ts\nexport const userReducer = (state = UserInitialState, action: any) => {\n  switch (action.type) {\n    // REGISTER USER\n    case ActionTypes.REGISTER_USER_START:\n      return { ...state, registerUserStart: true };\n\n    case ActionTypes.REGISTER_USER_SUCCESS:\n      return {\n        ...state,\n        registerUserStart: false,\n        id: action.payload.id,\n        email: action.payload.email,\n        password: action.payload.password,\n      };\n\n    case ActionTypes.REGISTER_USER_ERROR:\n      return { ...state, registerUserStart: false, registerUserError: true };\n\n    // LOGIN USER\n    case ActionTypes.LOGIN_USER_START:\n      return { ...state, loginUserStart: true };\n\n    case ActionTypes.LOGIN_USER_SUCCESS:\n      return {\n        ...state,\n        tokenPresent: true,\n        loginUserStart: false,\n        id: action.payload.id,\n        email: action.payload.email,\n      };\n\n    case ActionTypes.LOGIN_USER_ERROR:\n      return { ...state, loginUserStart: false, loginUserError: true };\n\n    case ActionTypes.LOGOUT_USER_START:\n      return { ...state, logoutUserStart: true };\n\n    case ActionTypes.LOGOUT_USER_SUCCESS:\n      return { ...UserInitialState, tokenPresent: false };\n\n    case ActionTypes.LOGOUT_USER_ERROR:\n      return { ...state, logoutUserStart: false, logoutUserError: true };\n\n    // GET USER\n    case ActionTypes.GET_USER_START:\n      return {\n        ...state,\n        getUserStart: true,\n      };\n\n    case ActionTypes.GET_USER_SUCCESS:\n      return {\n        ...state,\n        getUserStart: false,\n        id: action.payload.id,\n        email: action.payload.email,\n      };\n\n    case ActionTypes.GET_USER_ERROR:\n      return {\n        ...state,\n        getUserError: true,\n      };\n\n    default:\n      return state;\n  }\n};\n","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/CreateBlogPost/CreateBlogPost.tsx",[],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Blog/SingleBlogPost.tsx",["158","159"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Blog/BlogCard.tsx",["160","161"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Register/FormikRegisterForm.tsx",["162","163"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/reportWebVitals.js",[],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/CreateBlogPost/FormikNewPostForm.tsx",["164","165","166"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/reducers/index.js",[],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Register/Register.tsx",["167"],{"ruleId":"168","severity":1,"message":"169","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":25},{"ruleId":"168","severity":1,"message":"172","line":1,"column":27,"nodeType":"170","messageId":"171","endLine":1,"endColumn":36},{"ruleId":"168","severity":1,"message":"173","line":8,"column":8,"nodeType":"170","messageId":"171","endLine":8,"endColumn":14},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"168","severity":1,"message":"169","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":25},{"ruleId":"168","severity":1,"message":"172","line":1,"column":27,"nodeType":"170","messageId":"171","endLine":1,"endColumn":36},{"ruleId":"168","severity":1,"message":"178","line":1,"column":38,"nodeType":"170","messageId":"171","endLine":1,"endColumn":44},{"ruleId":"174","replacedBy":"179"},{"ruleId":"176","replacedBy":"180"},{"ruleId":"168","severity":1,"message":"181","line":31,"column":11,"nodeType":"170","messageId":"171","endLine":31,"endColumn":22},{"ruleId":"168","severity":1,"message":"182","line":31,"column":24,"nodeType":"170","messageId":"171","endLine":31,"endColumn":29},{"ruleId":"168","severity":1,"message":"183","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":27},{"ruleId":"168","severity":1,"message":"184","line":2,"column":10,"nodeType":"170","messageId":"171","endLine":2,"endColumn":21},{"ruleId":"174","replacedBy":"179"},{"ruleId":"176","replacedBy":"180"},{"ruleId":"168","severity":1,"message":"185","line":5,"column":8,"nodeType":"170","messageId":"171","endLine":5,"endColumn":17},{"ruleId":"168","severity":1,"message":"186","line":7,"column":3,"nodeType":"170","messageId":"171","endLine":7,"endColumn":18},{"ruleId":"168","severity":1,"message":"187","line":10,"column":3,"nodeType":"170","messageId":"171","endLine":10,"endColumn":15},{"ruleId":"188","severity":1,"message":"189","line":30,"column":6,"nodeType":"190","endLine":30,"endColumn":16,"suggestions":"191"},{"ruleId":"168","severity":1,"message":"185","line":10,"column":8,"nodeType":"170","messageId":"171","endLine":10,"endColumn":17},{"ruleId":"168","severity":1,"message":"192","line":13,"column":11,"nodeType":"170","messageId":"171","endLine":13,"endColumn":30},{"ruleId":"168","severity":1,"message":"193","line":47,"column":9,"nodeType":"170","messageId":"171","endLine":47,"endColumn":15},{"ruleId":"174","replacedBy":"194"},{"ruleId":"176","replacedBy":"195"},{"ruleId":"168","severity":1,"message":"184","line":4,"column":10,"nodeType":"170","messageId":"171","endLine":4,"endColumn":21},{"ruleId":"168","severity":1,"message":"196","line":4,"column":36,"nodeType":"170","messageId":"171","endLine":4,"endColumn":43},{"ruleId":"168","severity":1,"message":"197","line":32,"column":11,"nodeType":"170","messageId":"171","endLine":32,"endColumn":19},{"ruleId":"174","replacedBy":"194"},{"ruleId":"176","replacedBy":"195"},{"ruleId":"168","severity":1,"message":"198","line":14,"column":7,"nodeType":"170","messageId":"171","endLine":14,"endColumn":15},{"ruleId":"168","severity":1,"message":"172","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":26},{"ruleId":"168","severity":1,"message":"169","line":1,"column":28,"nodeType":"170","messageId":"171","endLine":1,"endColumn":36},{"ruleId":"168","severity":1,"message":"199","line":8,"column":10,"nodeType":"170","messageId":"171","endLine":8,"endColumn":14},{"ruleId":"168","severity":1,"message":"200","line":53,"column":45,"nodeType":"170","messageId":"171","endLine":53,"endColumn":49},{"ruleId":"168","severity":1,"message":"169","line":1,"column":28,"nodeType":"170","messageId":"171","endLine":1,"endColumn":36},{"ruleId":"168","severity":1,"message":"199","line":9,"column":10,"nodeType":"170","messageId":"171","endLine":9,"endColumn":14},{"ruleId":"168","severity":1,"message":"201","line":50,"column":11,"nodeType":"170","messageId":"171","endLine":50,"endColumn":25},{"ruleId":"168","severity":1,"message":"202","line":59,"column":7,"nodeType":"170","messageId":"171","endLine":59,"endColumn":14},{"ruleId":"168","severity":1,"message":"200","line":73,"column":8,"nodeType":"170","messageId":"171","endLine":73,"endColumn":12},{"ruleId":"188","severity":1,"message":"203","line":78,"column":6,"nodeType":"190","endLine":78,"endColumn":8,"suggestions":"204"},{"ruleId":"168","severity":1,"message":"205","line":4,"column":10,"nodeType":"170","messageId":"171","endLine":4,"endColumn":20},{"ruleId":"206","severity":1,"message":"207","line":42,"column":7,"nodeType":"170","messageId":"208","endLine":42,"endColumn":21},{"ruleId":"188","severity":1,"message":"209","line":61,"column":6,"nodeType":"190","endLine":61,"endColumn":8,"suggestions":"210"},{"ruleId":"168","severity":1,"message":"211","line":17,"column":10,"nodeType":"170","messageId":"171","endLine":17,"endColumn":31},{"ruleId":"168","severity":1,"message":"212","line":55,"column":7,"nodeType":"170","messageId":"171","endLine":55,"endColumn":20},{"ruleId":"168","severity":1,"message":"213","line":8,"column":18,"nodeType":"170","messageId":"171","endLine":8,"endColumn":25},{"ruleId":"168","severity":1,"message":"185","line":10,"column":8,"nodeType":"170","messageId":"171","endLine":10,"endColumn":17},{"ruleId":"168","severity":1,"message":"213","line":8,"column":18,"nodeType":"170","messageId":"171","endLine":8,"endColumn":25},{"ruleId":"168","severity":1,"message":"185","line":10,"column":8,"nodeType":"170","messageId":"171","endLine":10,"endColumn":17},{"ruleId":"168","severity":1,"message":"193","line":39,"column":9,"nodeType":"170","messageId":"171","endLine":39,"endColumn":15},{"ruleId":"168","severity":1,"message":"200","line":82,"column":8,"nodeType":"170","messageId":"171","endLine":82,"endColumn":12},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Header' is defined but never used.","no-native-reassign",["214"],"no-negated-in-lhs",["215"],"'useRef' is defined but never used.",["214"],["215"],"'description' is assigned a value but never used.","'title' is assigned a value but never used.","'useContext' is defined but never used.","'useSelector' is defined but never used.","'PropTypes' is defined but never used.","'getAllBlogPosts' is defined but never used.","'getFavorites' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'history' and 'string_id'. Either include them or remove the dependency array.","ArrayExpression",["216"],"'FormikUserFormProps' is defined but never used.","'userId' is assigned a value but never used.",["214"],["215"],"'connect' is defined but never used.","'sections' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'Link' is defined but never used.","'rest' is assigned a value but never used.","'SingleBlogPost' is defined but never used.","'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentPost.blogpost_title', 'getFieldProps', and 'setFieldValue'. Either include them or remove the dependency array.",["217"],"'ACTIONTYPE' is defined but never used.","@typescript-eslint/no-redeclare","'SingleBlogPost' is already defined.","redeclared","React Hook useEffect has missing dependencies: 'dispatch', 'id', 'postId', and 'userPost.user_id'. Either include them or remove the dependency array.",["218"],"'findAllByDisplayValue' is defined but never used.","'userFavorites' is assigned a value but never used.","'DOMLink' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},"Update the dependencies array to be: [dispatch, history, string_id]",{"range":"225","text":"226"},"Update the dependencies array to be: [currentPost.blogpost_title, getFieldProps, setFieldValue]",{"range":"227","text":"228"},"Update the dependencies array to be: [dispatch, id, postId, userPost.user_id]",{"range":"229","text":"230"},[927,937],"[dispatch, history, string_id]",[1995,1997],"[currentPost.blogpost_title, getFieldProps, setFieldValue]",[1865,1867],"[dispatch, id, postId, userPost.user_id]"]