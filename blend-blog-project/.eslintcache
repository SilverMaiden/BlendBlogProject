[{"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/App.tsx":"1","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/PrivateRoute.tsx":"2","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Blog/Header.tsx":"3","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/CreateBlogPost/CreateBlogPost.tsx":"4","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/CreateBlogPost/FormikNewPostForm.tsx":"5","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/ViewUserPosts.tsx":"6","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/actions/userActions.js":"7","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/reportWebVitals.js":"8","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Register/FormikRegisterForm.tsx":"9","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/reducers/blogpostReducer.ts":"10","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/reducers/initialState.ts":"11","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Blog/Footer.tsx":"12","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Register/Register.tsx":"13","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/EditBlogPost/FormikEditPostForm.tsx":"14","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/EditBlogPost/EditPostForm.tsx":"15","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Blog/Blog.tsx":"16","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/CreateBlogPost/NewPostForm.tsx":"17","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/actions/actionTypes.js":"18","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/index.tsx":"19","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Home.tsx":"20","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/reducers/userReducer.ts":"21","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/utils/axiosWithAuth.js":"22","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/LogIn/FormikLogInForm.tsx":"23","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/LogIn/LogIn.tsx":"24","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/actions/blogpostActions.js":"25","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Favorites.tsx":"26","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Blog/SingleBlogPost.tsx":"27","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Blog/BlogCard.tsx":"28","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Blog/HeroBanner.tsx":"29","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/reducers/index.js":"30"},{"size":1323,"mtime":1610522066695,"results":"31","hashOfConfig":"32"},{"size":905,"mtime":1610393347516,"results":"33","hashOfConfig":"32"},{"size":2023,"mtime":1610523233189,"results":"34","hashOfConfig":"32"},{"size":1090,"mtime":1610523385843,"results":"35","hashOfConfig":"32"},{"size":1692,"mtime":1610521091712,"results":"36","hashOfConfig":"32"},{"size":1613,"mtime":1610523813824,"results":"37","hashOfConfig":"32"},{"size":3102,"mtime":1610522708442,"results":"38","hashOfConfig":"32"},{"size":364,"mtime":1610317146337,"results":"39","hashOfConfig":"32"},{"size":2084,"mtime":1610475299633,"results":"40","hashOfConfig":"32"},{"size":5237,"mtime":1610526119053,"results":"41","hashOfConfig":"32"},{"size":1053,"mtime":1610525249475,"results":"42","hashOfConfig":"32"},{"size":1304,"mtime":1610406683502,"results":"43","hashOfConfig":"32"},{"size":5285,"mtime":1610475299634,"results":"44","hashOfConfig":"32"},{"size":1855,"mtime":1610521092169,"results":"45","hashOfConfig":"32"},{"size":3431,"mtime":1610521092058,"results":"46","hashOfConfig":"32"},{"size":2507,"mtime":1610524070196,"results":"47","hashOfConfig":"32"},{"size":2752,"mtime":1610395409763,"results":"48","hashOfConfig":"32"},{"size":2648,"mtime":1610521093040,"results":"49","hashOfConfig":"32"},{"size":1088,"mtime":1610317146183,"results":"50","hashOfConfig":"32"},{"size":1193,"mtime":1610521092335,"results":"51","hashOfConfig":"32"},{"size":2068,"mtime":1610526077907,"results":"52","hashOfConfig":"32"},{"size":332,"mtime":1610317146431,"results":"53","hashOfConfig":"32"},{"size":1441,"mtime":1610317146175,"results":"54","hashOfConfig":"32"},{"size":4786,"mtime":1610317146177,"results":"55","hashOfConfig":"32"},{"size":6784,"mtime":1610522582636,"results":"56","hashOfConfig":"32"},{"size":1554,"mtime":1610523107108,"results":"57","hashOfConfig":"32"},{"size":3604,"mtime":1610525994695,"results":"58","hashOfConfig":"32"},{"size":3362,"mtime":1610526638412,"results":"59","hashOfConfig":"32"},{"size":2046,"mtime":1610523382765,"results":"60","hashOfConfig":"32"},{"size":332,"mtime":1610317146293,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"fmgsu8",{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"94"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"94"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"94"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/App.tsx",["139","140","141"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/PrivateRoute.tsx",["142","143"],"import React, { useContext } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { RouteProps, Route, Redirect } from \"react-router-dom\";\nimport dotenv from \"dotenv\";\ndotenv.config();\n\ninterface PrivateRouteProps {\n  path: RouteProps[\"path\"];\n  component: React.ElementType;\n};\nconst PrivateRoute: React.FunctionComponent<PrivateRouteProps> = ({\n  component: Component,\n  ...routeProps\n}) => {\n  // Using this value for now to allow token to remain even if page refreshes/go to another link on site\n  const tokenPresent = window.localStorage.getItem(\"token\");\n  //const { token } = useContext(AppContext);\n  //const token = window.localStorage.getItem(\"token\");\n  console.log(tokenPresent);\n  return (\n    <Route\n      {...routeProps}\n      render={(props) =>\n        tokenPresent ? <Component props={props} /> : <Redirect to={\"/login\"} />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n",["144","145"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Blog/Header.tsx",["146","147","148"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/CreateBlogPost/CreateBlogPost.tsx",[],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/CreateBlogPost/FormikNewPostForm.tsx",["149","150","151"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/ViewUserPosts.tsx",["152","153","154"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/actions/userActions.js",[],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/reportWebVitals.js",[],["155","156"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Register/FormikRegisterForm.tsx",["157","158"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/reducers/blogpostReducer.ts",["159"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/reducers/initialState.ts",[],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Blog/Footer.tsx",["160","161"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\n\nconst Copyright = () => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Humaira's Blog\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    // marginTop: theme.spacing(8),\n    padding: theme.spacing(6, 0),\n  },\n}));\n\nexport default function Footer(props: any) {\n  const classes = useStyles();\n  const { description, title } = props;\n\n  return (\n    <footer className={classes.footer}>\n      <Container maxWidth=\"lg\">\n\n        <Typography\n          variant=\"subtitle1\"\n          align=\"center\"\n          color=\"textSecondary\"\n          component=\"p\"\n        >\n          {/*description*/}\n        </Typography>\n        <Copyright />\n      </Container>\n    </footer>\n  );\n}\n\nFooter.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string,\n};\n",["162","163"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Register/Register.tsx",["164"],"import React from \"react\";\n\nimport { Form, FormikProps } from \"formik\";\nimport axios from \"axios\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.mode === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\n\n// Shape of form values\ninterface FormValues {\n  name: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nconst Register = (props: FormikProps<FormValues>) => {\n  const classes = useStyles();\n\n  const {\n    errors,\n    touched,\n    isSubmitting,\n    getFieldHelpers,\n    getFieldProps,\n    ...rest\n  } = props;\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          {/* FORM STARTS HERE */}\n          <Form className={classes.form}>\n            {/* Name Text Field */}\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"name\"\n              label=\"Name\"\n              onChange={props.handleChange}\n              value={props.values.name}\n              autoComplete=\"name\"\n              autoFocus\n              error={Boolean(errors.name && touched.name)}\n            />\n            {/* Email Text Field  */}\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              onChange={props.handleChange}\n              value={props.values.email}\n              autoComplete=\"email\"\n              autoFocus\n              error={Boolean(errors.email)}\n            />\n            {/* Password Text Field */}\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              error={Boolean(errors.password && touched.password)}\n              name=\"password\"\n              value={props.values.password}\n              onChange={props.handleChange}\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            {errors.password ? <div>{errors.password}</div> : null}\n\n            {/* Confirm Password Text Field */}\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              error={Boolean(errors.password && touched.password)}\n              name=\"confirmPassword\"\n              value={props.values.confirmPassword}\n              onChange={props.handleChange}\n              label=\"ConfirmPassword\"\n              type=\"password\"\n              id=\"confirmPassword\"\n              autoComplete=\"current-password\"\n            />\n            {touched.password && errors.password ? (\n              <div>{errors.confirmPassword}</div>\n            ) : null}\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              className={classes.submit}\n            >\n              Sign Up\n            </Button>\n            <Grid container>\n              <Grid item>\n                <Link href=\"/login\" variant=\"body2\">\n                  {\"Already have an account? LogIn\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Box sx={{ mt: 5 }}>\n              <Copyright />\n            </Box>\n          </Form>\n          {/* FORM ENDS HERE */}\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Register;\n",["165","166"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/EditBlogPost/FormikEditPostForm.tsx",["167","168","169"],"import EditPostForm from \"./EditPostForm\";\nimport { editBlogPost } from \"../../redux/actions/blogpostActions\";\nimport { withFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { connect } from \"react-redux\";\n//Implement loader if time allows\n//import Loader from 'react-loader-spinner';\nimport { useHistory } from \"react-router-dom\";\n// PropTypes vs Typescript?\nimport PropTypes from \"prop-types\";\n\n// The type of props FormikUserForm receives\ninterface FormikUserFormProps {\n  title?: string;\n  content?: string;\n  blogpost?: any;\n}\n// Shape of form values\ninterface NewPostFormValues {\n  title: string;\n  content: string;\n  id: number;\n}\n\nconst mapDispatchToProps = {\n  editBlogPost,\n  useHistory,\n};\n\nconst mapStateToProps = (state: any) => ({\n  currentPost: state.blogpostReducer.singleBlogPost,\n});\n\nconst FormikEditPostForm = withFormik({\n  mapPropsToValues: (props: any) => ({\n    title: props.currentPost.blogpost_title,\n    content: props.currentPost.blogpost_content,\n    id: props.currentPost.id,\n  }),\n  enableReinitialize: true,\n  validationSchema: Yup.object().shape({\n    title: Yup.string().required(\"Title is required\"),\n    content: Yup.string().required(\"Content Required\"),\n  }),\n  handleSubmit(values: NewPostFormValues, { props }: any) {\n    console.log(props);\n    let userId = window.localStorage.getItem(\"id\");\n    console.log(props);\n    let postData: object = {\n      blogpost_title: values.title,\n      blogpost_content: values.content,\n      id: values.id,\n    };\n    console.log(props.editBlogPost);\n    console.log(props);\n\n    props.editBlogPost(postData, props.history);\n  },\n})(EditPostForm);\n\n// Connecting will allow FormikLogInForm to access loginUser dispatch function\nconst ConnectedEditPostForm = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FormikEditPostForm);\n\nexport default ConnectedEditPostForm;\n",["170","171"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/EditBlogPost/EditPostForm.tsx",["172","173","174","175","176","177"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Form, FormikProps } from \"formik\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.mode === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    width: \"25%\",\n  },\n}));\n\n// Shape of form values\ninterface FormValues {\n  title: string;\n  content: string;\n}\ninterface SingleBlogPost {\n  blogpost_title: string;\n  blogpost_content: string;\n  user_id: number;\n  id: number;\n}\n\nexport default function EditPostForm(props: FormikProps<FormValues>) {\n  const classes = useStyles();\n  let history = useHistory();\n  const currentPost = useSelector(\n    (state: any) => state.blogpostReducer.singleBlogPost\n  );\n  //console.log(currentPost)\n  const {\n    errors,\n    touched,\n    isSubmitting,\n    getFieldHelpers,\n    getFieldProps,\n    setFieldValue,\n    setFieldTouched,\n    handleSubmit,\n    ...rest\n  } = props;\n  useEffect(() => {\n    getFieldProps(\"title\").value = currentPost.blogpost_title;\n    setFieldValue(\"title\", currentPost.blogpost_title);\n  }, []);\n  //console.log(props)\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Edit Post\n      </Typography>\n      {/* FORM STARTS HERE */}\n      <Form className={classes.form}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={6}></Grid>\n          <Grid item xs={12}>\n            <TextField\n              required\n              id=\"title\"\n              name=\"title\"\n              key=\"title\"\n              label=\"title\"\n              value={props.values.title}\n              onChange={props.handleChange}\n              style={{ width: \"50%\" }}\n              autoComplete=\"Blog Title\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              required\n              id=\"content\"\n              name=\"content\"\n              label=\"content\"\n              value={props.values.content}\n              onChange={props.handleChange}\n              multiline\n              variant=\"filled\"\n              fullWidth\n              style={{ width: \"50%\" }}\n              autoComplete=\"Write post here...\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              className={classes.submit}\n            >\n              Submit Post\n            </Button>\n          </Grid>\n        </Grid>\n      </Form>\n    </React.Fragment>\n  );\n}\n","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Blog/Blog.tsx",[],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/CreateBlogPost/NewPostForm.tsx",["178","179","180","181"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/actions/actionTypes.js",[],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/index.tsx",[],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Home.tsx",["182","183","184","185"],"import * as React from \"react\";\nimport Blog from \"./Blog/Blog\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport {\n  getAllBlogPosts,\n  getBlogPostsByUser,\n  getFilteredBlogPosts,\n  getFavorites,\n} from \"../redux/actions/blogpostActions\";\nimport { getUser } from \"../redux/actions/userActions\";\n\nconst Home = (props: any) => {\n  const dispatch = useDispatch(); /*\n  const mapDispatchToProps = (dispatch: any) => {\n    dispatch(getAllBlogPosts)\n  };  */\n  let history = useHistory();\n  let string_id = window.localStorage.getItem(\"id\");\n  React.useEffect(() => {\n    // Axios get request for blogs, for now users\n    dispatch(getFilteredBlogPosts(\"\", history));\n    if (string_id) {\n      let id = parseInt(string_id, 10);\n      dispatch(getUser(id));\n      dispatch(getBlogPostsByUser(id));\n      //dispatch(getFavorites(user));\n    }\n  }, [dispatch]);\n\n  const user = useSelector((state: any) => state.userReducer.id);\n  console.log(user);\n  return (\n    <div className=\"Home\">\n      <header className=\"Home-header\"></header>\n      <Blog props={user} />\n    </div>\n  );\n};\n\nexport default Home;\n",["186","187"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/reducers/userReducer.ts",["188"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/utils/axiosWithAuth.js",[],["189","190"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/LogIn/FormikLogInForm.tsx",["191","192"],"import LogIn from \"./LogIn\";\nimport { loginUser } from \"../../redux/actions/userActions\";\nimport { withFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { connect } from \"react-redux\";\n//Implement loader if time allows\n//import Loader from 'react-loader-spinner';\nimport { Link as DOMLink, useHistory } from \"react-router-dom\";\n// PropTypes vs Typescript?\nimport PropTypes from \"prop-types\";\n\n// The type of props FormikUserForm receives\ninterface FormikUserFormProps {\n  initialEmail?: string;\n  message: string;\n}\n// Shape of form values\ninterface FormValues {\n  email: string;\n  password: string;\n}\n\nconst mapDispatchToProps = {\n  loginUser,\n  useHistory,\n};\n\nconst FormikLogInForm = withFormik<FormikUserFormProps, FormValues>({\n  mapPropsToValues: (props) => ({\n    email: props.initialEmail || \"\",\n    password: \"\",\n  }),\n  validationSchema: Yup.object().shape({\n    email: Yup.string().required(\"Email is required\").email(\"Invalid Email\"),\n    password: Yup.string().required(\"Password Required\"),\n  }),\n  handleSubmit(values: FormValues, { props }: any) {\n    let postData: object = { email: values.email, password: values.password };\n    console.log(props.history);\n    props.loginUser(postData, props.history);\n  },\n})(LogIn);\n\n// Connecting will allow FormikLogInForm to access loginUser dispatch function\nconst ConnectedLogInForm = connect(null, mapDispatchToProps)(FormikLogInForm);\n\nexport default ConnectedLogInForm;\n","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/LogIn/LogIn.tsx",["193","194","195","196","197","198","199"],"import React, { useState } from \"react\";\n//Implement loader if time allows\n//import Loader from 'react-loader-spinner';\nimport { Link as DOMLink, useHistory } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\n// Maybe move redux content into Formik component\nimport { Form, FormikProps } from \"formik\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TextField } from \"@material-ui/core\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.mode === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n// Shape of form values\ninterface FormValues {\n  email: string;\n  password: string;\n}\n\nconst LogIn = (props: FormikProps<FormValues>) => {\n  const classes = useStyles();\n\n  const {\n    errors,\n    touched,\n    isSubmitting,\n    getFieldHelpers,\n    getFieldProps,\n    ...rest\n  } = props;\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Log in\n          </Typography>\n          {/* FORM STARTS HERE */}\n          <Form className={classes.form}>\n            {/* Email Text Field */}\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              {...getFieldProps(\"email\")}\n              onChange={props.handleChange}\n              value={props.values.email}\n              autoComplete=\"email\"\n              autoFocus\n              error={Boolean(errors.email && touched.email)}\n            />\n            {/* Shows error message to users if given invalid email */}\n            {touched.email && errors.email ? <div>{errors.email}</div> : null}\n            {/* Password Text Field */}\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              error={Boolean(errors.password && touched.password)}\n              name=\"password\"\n              value={props.values.password}\n              onChange={props.handleChange}\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            {touched.password && errors.password ? (\n              <div>{errors.password}</div>\n            ) : null}\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              className={classes.submit}\n            >\n              Log in\n            </Button>\n            <Grid container>\n              <Grid item>\n                <Link href=\"/\" variant=\"body2\">\n                  {\"Don't have an account? Sign up\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Box sx={{ mt: 5 }}>\n              <Copyright />\n            </Box>\n          </Form>\n          {/* FORM ENDS HERE */}\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n//withFormik is applied to this component in '../actions/FormikLogInForm.tsx'\nexport default LogIn;\n","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/actions/blogpostActions.js",[],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Favorites.tsx",["200"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Blog/SingleBlogPost.tsx",["201","202"],"import { useEffect, useState, Fragment } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\n// Material UI imports\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\n\n// Component Imports\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport HeroBanner from \"./HeroBanner\";\nimport FormikEditPostForm from \"../EditBlogPost/FormikEditPostForm\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\n\n//Action Imports\nimport { deleteBlogPost, getSingleBlogPost } from \"../../redux/actions/blogpostActions\";\n\n// Typescript interface definition for a single blog post.\ninterface SingleBlogPost {\n  blogpost_title: string;\n  blogpost_content: string;\n  user_id: number;\n  id: number;\n}\n\n\n// Currently unused interface for type Author\n/*interface Author {\n  id: number;\n  name: string;\n}*/\n\nconst SingleBlogPost = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [editMode, setEditMode] = useState<boolean | null>(false);\n\n  const url: string = window.location.pathname;\n  const postId: number = parseInt(url.substring(url.lastIndexOf(\"/\") + 1));\n  console.log(postId);\n  const userPost: SingleBlogPost = useSelector(\n    (state: any) => state.blogpostReducer.singleBlogPost\n  );\n  //const user: Author = useSelector((state))\n  useEffect(() => {\n    console.log(postId);\n    dispatch(getSingleBlogPost(postId));\n    //dispatch(getUser(userPost.user_id));\n  }, []);\n\n  const post = {\n    title: userPost.blogpost_title,\n    description: \"\",\n    image:\n      \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTwZQ_Fc8p7OHV7r01bZeZrhfZlHRfnKL2O3Q&usqp=CAU\",\n    imgText: \"main image description\",\n    linkText: \"Continue reading…\",\n  };\n\n \n  const handleDelete = () => {\n    //Going to use react-confirm-alert\n    confirmAlert({\n      title: \"Confirm to delete\",\n      message: `Are you sure you want to delete this post? There's no getting it back.`,\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => dispatch(deleteBlogPost(postId, history)),\n        },\n        {\n          label: \"No\",\n          onClick: () => null,\n        },\n      ],\n    });\n  };\n\n //Function for edit mode - if it's in edit mode, render a form. If not, render the viewing\n  //component.\n  const toggleEditMode = () => {\n    if (editMode) {\n      setEditMode(false);\n    } else {\n      setEditMode(true);\n    }\n  };\n\n  // selectActiveComponent renders either the edit form for the blog, or the post page.\n  const selectActiveComponent = () => {\n    if (editMode) {\n      return (\n        <Container>\n          <FormikEditPostForm />\n        </Container>\n      );\n    } else {\n      return (\n        <Container>\n          <h1>{userPost.blogpost_title}</h1>\n          <br />\n          {console.log(userPost)}\n          <p>{userPost.blogpost_content}</p>\n        </Container>\n      );\n    }\n  };\n\n  return (\n    <Fragment>\n      <CssBaseline />\n      <main>\n        <Header />\n        <HeroBanner post={post} />\n        <br />\n        <EditIcon onClick={toggleEditMode} />\n        <DeleteOutlineIcon onClick={handleDelete} />\n        {selectActiveComponent()}\n      </main>\n      <Footer\n        title=\"Footer\"\n        description=\"Something here to give the footer a purpose!\"\n      />\n    </Fragment>\n  );\n};\n\nexport default SingleBlogPost;\n","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Blog/BlogCard.tsx",["203","204"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Blog/HeroBanner.tsx",["205"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\n\nconst useStyles = makeStyles((theme) => ({\n  HeroBanner: {\n    position: \"relative\",\n    backgroundColor: theme.palette.grey[800],\n    color: theme.palette.common.white,\n    marginBottom: theme.spacing(4),\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"center\",\n  },\n  overlay: {\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    backgroundColor: \"rgba(0,0,0,.3)\",\n  },\n  HeroBannerContent: {\n    position: \"relative\",\n    padding: theme.spacing(3),\n    [theme.breakpoints.up(\"md\")]: {\n      padding: theme.spacing(6),\n      paddingRight: 0,\n    },\n  },\n}));\n\nconst HeroBanner = (props: any) => {\n  const classes = useStyles();\n  const { post } = props;\n\n  return (\n    <Paper\n      className={classes.HeroBanner}\n      style={{ backgroundImage: `url(${post.image})` }}\n    >\n      {/* Increase the priority of the hero background image */}\n      {\n        <img\n          style={{ display: \"none\" }}\n          src={post.image}\n          alt={post.imageText}\n        />\n      }\n      <div className={classes.overlay} />\n      <Grid container>\n        <Grid item md={6}>\n          <div className={classes.HeroBannerContent}>\n            <Typography\n              component=\"h1\"\n              variant=\"h3\"\n              color=\"inherit\"\n              gutterBottom\n            >\n              {post.title}\n            </Typography>\n            <Typography variant=\"h5\" color=\"inherit\" paragraph>\n              {post.description}\n            </Typography>\n          </div>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nHeroBanner.propTypes = {\n  post: PropTypes.object,\n};\n\nexport default HeroBanner;\n","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/redux/reducers/index.js",[],{"ruleId":"206","severity":1,"message":"207","line":1,"column":17,"nodeType":"208","messageId":"209","endLine":1,"endColumn":25},{"ruleId":"206","severity":1,"message":"210","line":1,"column":27,"nodeType":"208","messageId":"209","endLine":1,"endColumn":36},{"ruleId":"206","severity":1,"message":"211","line":8,"column":8,"nodeType":"208","messageId":"209","endLine":8,"endColumn":14},{"ruleId":"206","severity":1,"message":"212","line":1,"column":17,"nodeType":"208","messageId":"209","endLine":1,"endColumn":27},{"ruleId":"206","severity":1,"message":"213","line":2,"column":10,"nodeType":"208","messageId":"209","endLine":2,"endColumn":21},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","replacedBy":"217"},{"ruleId":"206","severity":1,"message":"213","line":4,"column":10,"nodeType":"208","messageId":"209","endLine":4,"endColumn":21},{"ruleId":"206","severity":1,"message":"218","line":4,"column":36,"nodeType":"208","messageId":"209","endLine":4,"endColumn":43},{"ruleId":"206","severity":1,"message":"219","line":32,"column":11,"nodeType":"208","messageId":"209","endLine":32,"endColumn":19},{"ruleId":"206","severity":1,"message":"220","line":8,"column":18,"nodeType":"208","messageId":"209","endLine":8,"endColumn":25},{"ruleId":"206","severity":1,"message":"221","line":10,"column":8,"nodeType":"208","messageId":"209","endLine":10,"endColumn":17},{"ruleId":"206","severity":1,"message":"222","line":39,"column":9,"nodeType":"208","messageId":"209","endLine":39,"endColumn":15},{"ruleId":"206","severity":1,"message":"207","line":1,"column":17,"nodeType":"208","messageId":"209","endLine":1,"endColumn":25},{"ruleId":"206","severity":1,"message":"210","line":1,"column":27,"nodeType":"208","messageId":"209","endLine":1,"endColumn":36},{"ruleId":"206","severity":1,"message":"223","line":1,"column":38,"nodeType":"208","messageId":"209","endLine":1,"endColumn":44},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","replacedBy":"217"},{"ruleId":"206","severity":1,"message":"220","line":8,"column":18,"nodeType":"208","messageId":"209","endLine":8,"endColumn":25},{"ruleId":"206","severity":1,"message":"221","line":10,"column":8,"nodeType":"208","messageId":"209","endLine":10,"endColumn":17},{"ruleId":"206","severity":1,"message":"224","line":3,"column":10,"nodeType":"208","messageId":"209","endLine":3,"endColumn":20},{"ruleId":"206","severity":1,"message":"225","line":31,"column":11,"nodeType":"208","messageId":"209","endLine":31,"endColumn":22},{"ruleId":"206","severity":1,"message":"226","line":31,"column":24,"nodeType":"208","messageId":"209","endLine":31,"endColumn":29},{"ruleId":"214","replacedBy":"227"},{"ruleId":"216","replacedBy":"228"},{"ruleId":"206","severity":1,"message":"229","line":82,"column":8,"nodeType":"208","messageId":"209","endLine":82,"endColumn":12},{"ruleId":"214","replacedBy":"230"},{"ruleId":"216","replacedBy":"231"},{"ruleId":"206","severity":1,"message":"221","line":10,"column":8,"nodeType":"208","messageId":"209","endLine":10,"endColumn":17},{"ruleId":"206","severity":1,"message":"232","line":13,"column":11,"nodeType":"208","messageId":"209","endLine":13,"endColumn":30},{"ruleId":"206","severity":1,"message":"222","line":47,"column":9,"nodeType":"208","messageId":"209","endLine":47,"endColumn":15},{"ruleId":"214","replacedBy":"233"},{"ruleId":"216","replacedBy":"234"},{"ruleId":"206","severity":1,"message":"207","line":1,"column":28,"nodeType":"208","messageId":"209","endLine":1,"endColumn":36},{"ruleId":"206","severity":1,"message":"235","line":9,"column":10,"nodeType":"208","messageId":"209","endLine":9,"endColumn":14},{"ruleId":"206","severity":1,"message":"236","line":50,"column":11,"nodeType":"208","messageId":"209","endLine":50,"endColumn":25},{"ruleId":"206","severity":1,"message":"237","line":59,"column":7,"nodeType":"208","messageId":"209","endLine":59,"endColumn":14},{"ruleId":"206","severity":1,"message":"229","line":73,"column":8,"nodeType":"208","messageId":"209","endLine":73,"endColumn":12},{"ruleId":"238","severity":1,"message":"239","line":78,"column":6,"nodeType":"240","endLine":78,"endColumn":8,"suggestions":"241"},{"ruleId":"206","severity":1,"message":"210","line":1,"column":17,"nodeType":"208","messageId":"209","endLine":1,"endColumn":26},{"ruleId":"206","severity":1,"message":"207","line":1,"column":28,"nodeType":"208","messageId":"209","endLine":1,"endColumn":36},{"ruleId":"206","severity":1,"message":"235","line":8,"column":10,"nodeType":"208","messageId":"209","endLine":8,"endColumn":14},{"ruleId":"206","severity":1,"message":"229","line":58,"column":8,"nodeType":"208","messageId":"209","endLine":58,"endColumn":12},{"ruleId":"206","severity":1,"message":"221","line":5,"column":8,"nodeType":"208","messageId":"209","endLine":5,"endColumn":17},{"ruleId":"206","severity":1,"message":"242","line":7,"column":3,"nodeType":"208","messageId":"209","endLine":7,"endColumn":18},{"ruleId":"206","severity":1,"message":"243","line":10,"column":3,"nodeType":"208","messageId":"209","endLine":10,"endColumn":15},{"ruleId":"238","severity":1,"message":"244","line":30,"column":6,"nodeType":"240","endLine":30,"endColumn":16,"suggestions":"245"},{"ruleId":"214","replacedBy":"246"},{"ruleId":"216","replacedBy":"247"},{"ruleId":"206","severity":1,"message":"224","line":4,"column":10,"nodeType":"208","messageId":"209","endLine":4,"endColumn":20},{"ruleId":"214","replacedBy":"230"},{"ruleId":"216","replacedBy":"231"},{"ruleId":"206","severity":1,"message":"220","line":8,"column":18,"nodeType":"208","messageId":"209","endLine":8,"endColumn":25},{"ruleId":"206","severity":1,"message":"221","line":10,"column":8,"nodeType":"208","messageId":"209","endLine":10,"endColumn":17},{"ruleId":"206","severity":1,"message":"207","line":1,"column":17,"nodeType":"208","messageId":"209","endLine":1,"endColumn":25},{"ruleId":"206","severity":1,"message":"220","line":4,"column":18,"nodeType":"208","messageId":"209","endLine":4,"endColumn":25},{"ruleId":"206","severity":1,"message":"248","line":4,"column":27,"nodeType":"208","messageId":"209","endLine":4,"endColumn":37},{"ruleId":"206","severity":1,"message":"221","line":5,"column":8,"nodeType":"208","messageId":"209","endLine":5,"endColumn":17},{"ruleId":"206","severity":1,"message":"249","line":12,"column":8,"nodeType":"208","messageId":"209","endLine":12,"endColumn":24},{"ruleId":"206","severity":1,"message":"250","line":13,"column":8,"nodeType":"208","messageId":"209","endLine":13,"endColumn":16},{"ruleId":"206","severity":1,"message":"229","line":84,"column":8,"nodeType":"208","messageId":"209","endLine":84,"endColumn":12},{"ruleId":"206","severity":1,"message":"251","line":14,"column":7,"nodeType":"208","messageId":"209","endLine":14,"endColumn":15},{"ruleId":"252","severity":1,"message":"253","line":37,"column":7,"nodeType":"208","messageId":"254","endLine":37,"endColumn":21},{"ruleId":"238","severity":1,"message":"255","line":53,"column":6,"nodeType":"240","endLine":53,"endColumn":8,"suggestions":"256"},{"ruleId":"206","severity":1,"message":"257","line":17,"column":10,"nodeType":"208","messageId":"209","endLine":17,"endColumn":31},{"ruleId":"206","severity":1,"message":"258","line":45,"column":7,"nodeType":"208","messageId":"209","endLine":45,"endColumn":20},{"ruleId":"206","severity":1,"message":"235","line":7,"column":8,"nodeType":"208","messageId":"209","endLine":7,"endColumn":12},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Header' is defined but never used.","'useContext' is defined but never used.","'useSelector' is defined but never used.","no-native-reassign",["259"],"no-negated-in-lhs",["260"],"'connect' is defined but never used.","'sections' is assigned a value but never used.","'DOMLink' is defined but never used.","'PropTypes' is defined but never used.","'userId' is assigned a value but never used.","'useRef' is defined but never used.","'ACTIONTYPE' is defined but never used.","'description' is assigned a value but never used.","'title' is assigned a value but never used.",["259"],["260"],"'rest' is assigned a value but never used.",["259"],["260"],"'FormikUserFormProps' is defined but never used.",["259"],["260"],"'Link' is defined but never used.","'SingleBlogPost' is defined but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentPost.blogpost_title', 'getFieldProps', and 'setFieldValue'. Either include them or remove the dependency array.","ArrayExpression",["261"],"'getAllBlogPosts' is defined but never used.","'getFavorites' is defined but never used.","React Hook React.useEffect has missing dependencies: 'history' and 'string_id'. Either include them or remove the dependency array.",["262"],["259"],["260"],"'useHistory' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'dispatch' is assigned a value but never used.","@typescript-eslint/no-redeclare","'SingleBlogPost' is already defined.","redeclared","React Hook useEffect has missing dependencies: 'dispatch' and 'postId'. Either include them or remove the dependency array.",["263"],"'findAllByDisplayValue' is defined but never used.","'userFavorites' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},"Update the dependencies array to be: [currentPost.blogpost_title, getFieldProps, setFieldValue]",{"range":"270","text":"271"},"Update the dependencies array to be: [dispatch, history, string_id]",{"range":"272","text":"273"},"Update the dependencies array to be: [dispatch, postId]",{"range":"274","text":"275"},[1995,1997],"[currentPost.blogpost_title, getFieldProps, setFieldValue]",[937,947],"[dispatch, history, string_id]",[1721,1723],"[dispatch, postId]"]