[{"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/index.tsx":"1","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/LogIn.tsx":"2","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/App.js":"3","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/reportWebVitals.js":"4","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/PrivateRoute.tsx":"5","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/contexts/AppContext.tsx":"6","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/SignUp.tsx":"7","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Home.tsx":"8"},{"size":592,"mtime":1610082327764,"results":"9","hashOfConfig":"10"},{"size":6125,"mtime":1610140875057,"results":"11","hashOfConfig":"10"},{"size":708,"mtime":1610140947858,"results":"12","hashOfConfig":"10"},{"size":362,"mtime":1609958592899,"results":"13","hashOfConfig":"10"},{"size":675,"mtime":1610137042200,"results":"14","hashOfConfig":"10"},{"size":158,"mtime":1610083175090,"results":"15","hashOfConfig":"10"},{"size":5903,"mtime":1610140868799,"results":"16","hashOfConfig":"10"},{"size":1214,"mtime":1610132823366,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"fmgsu8",{"filePath":"21","messages":"22","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/index.tsx",[],["37","38"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/LogIn.tsx",["39","40","41","42","43","44","45","46","47","48","49"],"import React, { useState, useContext } from 'react';\nimport { useHistory, RouteComponentProps, Redirect } from \"react-router-dom\";\nimport { AppContext } from '../contexts/AppContext';\nimport { withFormik, Form, FormikErrors, Field, FormikProps } from 'formik';\nimport * as Yup from 'yup';\nimport axiosWithAuth  from 'axios';\nimport axios, {AxiosResponse, AxiosRequestConfig}  from 'axios';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { History } from '@material-ui/icons';\n\nfunction Copyright() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright Â© '}\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\n          Your Website\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\n  \n  const useStyles = makeStyles((theme) => ({\n    root: {\n      height: '100vh',\n    },\n    image: {\n      backgroundImage: 'url(https://source.unsplash.com/random)',\n      backgroundRepeat: 'no-repeat',\n      backgroundColor:\n        theme.palette.mode === 'light'\n          ? theme.palette.grey[50]\n          : theme.palette.grey[900],\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n    },\n    paper: {\n      margin: theme.spacing(8, 4),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%', // Fix IE11 issue.\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }));\n\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n\n // Shape of form values\n interface FormValues {\n  email: string;\n  password: string;\n}\n\nconst LogIn = (props: FormikProps<FormValues>) => {\n    const classes = useStyles();\n    //const [users, setUsers] = useState([]);\n    //console.log(props)\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n        <CssBaseline />\n        <Grid item xs={false} sm={4} md={7} className={classes.image} />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Log in\n            </Typography>\n        {/* FORM STARTS HERE */}\n            <Form className={classes.form}>\n\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              onChange={props.handleChange}\n              value={props.values.email}\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              value={props.values.password}\n              onChange={props.handleChange}\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              className={classes.submit}\n            >\n              Sign Up\n            </Button>\n            <Grid container>\n              <Grid item>\n                <Link href=\"/\" variant=\"body2\">\n                  {\"Don't have an account? Sign up\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Box sx={{ mt: 5 }}>\n              <Copyright />\n            </Box>\n            </Form>\n          {/* FORM ENDS HERE */}\n\n        </div>\n        </Grid>\n    </Grid>\n    );\n};\n\n // The type of props FormikUserForm receives\n interface FormikUserFormProps {\n   initialEmail?: string;\n   message: string;\n   history: any;\n\n}\n\nconst FormikLogInForm = withFormik<FormikUserFormProps, FormValues, RouteComponentProps>({\n    mapPropsToValues: props => ({\n          email: props.initialEmail || '',\n          password: '',\n          history: props.history || ''\n    })\n    , validate: (values: FormValues) =>\n    {\n      let errors: FormikErrors<FormValues> = {};\n      if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Invalid email address';\n        return errors;\n      }\n      Yup.object().shape({\n        email: Yup.string().required(),\n        password: Yup.string().required()\n    })},\n\n    handleSubmit(values: FormValues, {resetForm}) {\n      console.log(values)\n      let postData: object = {email: values.email, password: values.password}\n\n        axios.request<void, string>({\n          method: 'post',\n          url: \"http://localhost:8000/api/login/\",\n          data: postData\n        })\n          .then((res: any) => {\n            {console.log(values)}\n            if (res.status === 200) {\n              window.localStorage.setItem(\"token\", res.data.token)\n              window.history.pushState({}, \"welcome\", '/home');\n              window.location.reload();\n            }\n            resetForm();\n          })            \n          .catch(err => console.log(err.response));  \n    },\n})(LogIn);\n\nexport default FormikLogInForm;\n","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/App.js",[],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/reportWebVitals.js",[],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/PrivateRoute.tsx",["50"],"import React, { useContext } from 'react';\nimport { RouteProps, Route, Redirect } from 'react-router-dom';\nimport dotenv from \"dotenv\";\ndotenv.config();\n\ntype PrivateRouteProps = {\n  path: RouteProps['path'];\n  component: React.ElementType;\n};\nconst PrivateRoute: React.FunctionComponent<PrivateRouteProps> = ({\n  component: Component,\n  ...routeProps\n}) => {\n  //const { token } = useContext(AppContext);\n  const token = window.localStorage.getItem(\"token\");\n  console.log(token)\n  return (\n    <Route\n      {...routeProps}\n      render={(props) =>\n        token ? <Component props={props} /> : <Redirect to={'/login'} />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;","/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/contexts/AppContext.tsx",[],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/SignUp.tsx",["51","52","53","54","55","56"],"/Users/SilverMaiden/programming/BlendBlogProject/blend-blog-project/src/components/Home.tsx",["57","58","59"],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":25},{"ruleId":"64","severity":1,"message":"68","line":1,"column":27,"nodeType":"66","messageId":"67","endLine":1,"endColumn":37},{"ruleId":"64","severity":1,"message":"69","line":2,"column":10,"nodeType":"66","messageId":"67","endLine":2,"endColumn":20},{"ruleId":"64","severity":1,"message":"70","line":2,"column":43,"nodeType":"66","messageId":"67","endLine":2,"endColumn":51},{"ruleId":"64","severity":1,"message":"71","line":3,"column":10,"nodeType":"66","messageId":"67","endLine":3,"endColumn":20},{"ruleId":"64","severity":1,"message":"72","line":4,"column":42,"nodeType":"66","messageId":"67","endLine":4,"endColumn":47},{"ruleId":"64","severity":1,"message":"73","line":6,"column":8,"nodeType":"66","messageId":"67","endLine":6,"endColumn":21},{"ruleId":"64","severity":1,"message":"74","line":7,"column":16,"nodeType":"66","messageId":"67","endLine":7,"endColumn":29},{"ruleId":"64","severity":1,"message":"75","line":7,"column":31,"nodeType":"66","messageId":"67","endLine":7,"endColumn":49},{"ruleId":"64","severity":1,"message":"76","line":21,"column":10,"nodeType":"66","messageId":"67","endLine":21,"endColumn":17},{"ruleId":"77","severity":1,"message":"78","line":188,"column":13,"nodeType":"79","messageId":"80","endLine":188,"endColumn":34},{"ruleId":"64","severity":1,"message":"68","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":27},{"ruleId":"64","severity":1,"message":"81","line":1,"column":27,"nodeType":"66","messageId":"67","endLine":1,"endColumn":36},{"ruleId":"64","severity":1,"message":"72","line":2,"column":28,"nodeType":"66","messageId":"67","endLine":2,"endColumn":33},{"ruleId":"64","severity":1,"message":"82","line":66,"column":11,"nodeType":"66","messageId":"67","endLine":66,"endColumn":19},{"ruleId":"64","severity":1,"message":"83","line":82,"column":12,"nodeType":"66","messageId":"67","endLine":82,"endColumn":17},{"ruleId":"64","severity":1,"message":"84","line":82,"column":19,"nodeType":"66","messageId":"67","endLine":82,"endColumn":27},{"ruleId":"77","severity":1,"message":"78","line":196,"column":17,"nodeType":"79","messageId":"80","endLine":196,"endColumn":40},{"ruleId":"64","severity":1,"message":"75","line":2,"column":17,"nodeType":"66","messageId":"67","endLine":2,"endColumn":35},{"ruleId":"64","severity":1,"message":"85","line":2,"column":37,"nodeType":"66","messageId":"67","endLine":2,"endColumn":49},{"ruleId":"86","severity":1,"message":"87","line":17,"column":8,"nodeType":"88","endLine":17,"endColumn":10,"suggestions":"89"},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'useHistory' is defined but never used.","'Redirect' is defined but never used.","'AppContext' is defined but never used.","'Field' is defined but never used.","'axiosWithAuth' is defined but never used.","'AxiosResponse' is defined but never used.","'AxiosRequestConfig' is defined but never used.","'History' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'useEffect' is defined but never used.","'AllProps' is defined but never used.","'users' is assigned a value but never used.","'setUsers' is assigned a value but never used.","'AxiosPromise' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'blogs'. Either include it or remove the dependency array. You can also do a functional update 'setBlogs(b => ...)' if you only need 'blogs' in the 'setBlogs' call.","ArrayExpression",["92"],"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},"Update the dependencies array to be: [blogs]",{"range":"95","text":"96"},[543,545],"[blogs]"]